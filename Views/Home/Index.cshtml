<html>
<head>
    <link rel="stylesheet" href="~/css/site.css" />
    <style>
        .input {
            color: #fff;
            font-size: 0.9rem;
            background-color: transparent;
            width: 100%;
            box-sizing: border-box;
            padding-inline: 0.5em;
            padding-block: 0.7em;
            border: none;
            border-bottom: var(--border-height) solid var(--border-before-color);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .input-border {
            position: absolute;
            background: var(--border-after-color);
            width: 0%;
            height: 2px;
            bottom: 0;
            left: 0;
            transition: width 0.3s cubic-bezier(0.6, -0.28, 0.735, 0.045);
        }

        .input:focus {
            outline: none;
        }

            .input:focus + .input-border {
                width: 100%;
            }

        .form-control {
            position: relative;
            --width-of-input: 300px;
        }

        .input-alt {
            font-size: 1.2rem;
            padding-inline: 1em;
            padding-block: 0.8em;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .input-border-alt {
            height: 3px;
            background: linear-gradient(90deg, #FF6464 0%, #FFBF59 50%, #47C9FF 100%);
            transition: width 0.4s cubic-bezier(0.42, 0, 0.58, 1.00);
        }

        .input-alt:focus + .input-border-alt {
            width: 100%;
        }

        .customCheckBoxHolder {
            margin: 5px;
            display: flex;
        }

        .customCheckBox {
            width: fit-content;
            position: relative;
            overflow: hidden;
            cursor: pointer;
            user-select: none;
            padding: 2px 8px;
            background-color: rgba(0, 0, 0, 0.16);
            border-radius: 0px;
            color: rgba(255, 255, 255, 0.7);
            transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
            transition-duration: 300ms;
            transition-property: color, background-color, box-shadow;
            display: flex;
            height: 32px;
            align-items: center;
            box-shadow: rgba(0, 0, 0, 0.15) 0px 2px 1px 0px inset, rgba(255, 255, 255, 0.17) 0px 1px 1px 0px;
            outline: none;
            justify-content: center;
            min-width: 55px;
        }

            .customCheckBox:hover {
                background-color: #2c2c2c;
                color: white;
                box-shadow: rgba(0, 0, 0, 0.23) 0px -4px 1px 0px inset, rgba(255, 255, 255, 0.17) 0px -1px 1px 0px, rgba(0, 0, 0, 0.17) 0px 2px 4px 1px;
            }

            .customCheckBox .inner {
                font-size: 18px;
                font-weight: 900;
                pointer-events: none;
                transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
                transition-duration: 300ms;
                transition-property: transform;
                transform: translateY(0px);
            }

            .customCheckBox:hover .inner {
                transform: translateY(-2px);
            }

        /* Multiple Checkboxes can be chained together for a radio input */
        .customCheckBoxWrapper:first-of-type .customCheckBox {
            border-bottom-left-radius: 5px;
            border-top-left-radius: 5px;
            border-right: 0px;
        }

        .customCheckBoxWrapper:last-of-type .customCheckBox {
            border-bottom-right-radius: 5px;
            border-top-right-radius: 5px;
            border-left: 0px;
        }

        .customCheckBoxInput {
            display: none;
        }

            .customCheckBoxInput:checked + .customCheckBoxWrapper .customCheckBox {
                background-color: #2d6737;
                color: white;
                box-shadow: rgba(0, 0, 0, 0.23) 0px -4px 1px 0px inset, rgba(255, 255, 255, 0.17) 0px -1px 1px 0px, rgba(0, 0, 0, 0.17) 0px 2px 4px 1px;
            }

                .customCheckBoxInput:checked + .customCheckBoxWrapper .customCheckBox .inner {
                    transform: translateY(-2px);
                }

                .customCheckBoxInput:checked + .customCheckBoxWrapper .customCheckBox:hover {
                    background-color: #34723f;
                    box-shadow: rgba(0, 0, 0, 0.26) 0px -4px 1px 0px inset, rgba(255, 255, 255, 0.17) 0px -1px 1px 0px, rgba(0, 0, 0, 0.15) 0px 3px 6px 2px;
                }

        .customCheckBoxWrapper .customCheckBox:hover .inner {
            transform: translateY(-2px);
        }

    </style>
</head>
<body>
    <div class="container">
        <form class="search-bar" action="">
            <input class="search-input" required="" name="search" type="search" autocomplete="off">
            <button type="submit" class="search-btn">
                <span>Search</span>
            </button>
        </form>
            
                <div class="card">
                    <a class="login">Log in</a>
                    <div class="inputBox">
                        <input type="text" required="required">
                        <span class="user">Username</span>
                    </div>

                    <div class="inputBox">
                        <input type="password" required="required">
                        <span>Password</span>
                    </div>

                    <button class="enter">Enter</button>

                    <div class="form-control">
                        <input class="input input-alt" placeholder="Type something intelligent" required="" type="text">
                        <span class="input-border input-border-alt"></span>
                    </div>
        </div>
    </div>
    <div class="customCheckBoxHolder">

        <input type="checkbox" id="cCB1" class="customCheckBoxInput">
        <label for="cCB1" class="customCheckBoxWrapper">
            <div class="customCheckBox">
                <div class="inner">Mostrar contraseña</div>
            </div>
        </label>

    </div>
</body>
</html>
